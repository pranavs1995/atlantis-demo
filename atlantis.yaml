---
version: 3
# autodiscover:
#   mode: enabled
automerge: true
parallel_plan: true
parallel_apply: true
delete_source_branch_on_merge: true

projects:
- name: dev-instance1
  dir: terraform/dev/instance1
  terraform_version: 1.2.9
  workflow: dev
  autoplan:
    when_modified:
    - '**/*.tf'

- name: dev-instance2
  dir: terraform/dev/instance2
  terraform_version: 1.2.9
  workflow: dev
  autoplan:
    when_modified:
    - '**/*.tf'

- name: stage-instance
  dir: terraform/stage
  terraform_version: 1.2.9
  workflow: stage
  autoplan:
    when_modified:
    - '**/*.tf'

workflows:
  dev:
    plan:
      steps:
        - multienv:
            command: |
              TEMP_CREDS=$(aws sts assume-role --role-arn arn:aws:iam::838747702413:role/atlantis_dev --role-session-name AtlantisSession)
              echo AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r .Credentials.AccessKeyId),AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r .Credentials.SecretAccessKey),AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r .Credentials.SessionToken)
        - init
        - plan
    apply:
      steps:
        - multienv:
            command: |
              TEMP_CREDS=$(aws sts assume-role --role-arn arn:aws:iam::838747702413:role/atlantis_dev --role-session-name AtlantisSession)
              echo AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r .Credentials.AccessKeyId),AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r .Credentials.SecretAccessKey),AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r .Credentials.SessionToken)
        - apply

  stage:
    plan:
      steps:
        - multienv:
            command: |
              TEMP_CREDS=$(aws sts assume-role --role-arn arn:aws:iam::838747702413:role/atlantis_stage --role-session-name AtlantisSession)
              echo AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r .Credentials.AccessKeyId),AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r .Credentials.SecretAccessKey),AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r .Credentials.SessionToken)
        - init
        - plan
    apply:
      steps:
        - multienv:
            command: |
              TEMP_CREDS=$(aws sts assume-role --role-arn arn:aws:iam::838747702413:role/atlantis_stage --role-session-name AtlantisSession)
              echo AWS_ACCESS_KEY_ID=$(echo $TEMP_CREDS | jq -r .Credentials.AccessKeyId),AWS_SECRET_ACCESS_KEY=$(echo $TEMP_CREDS | jq -r .Credentials.SecretAccessKey),AWS_SESSION_TOKEN=$(echo $TEMP_CREDS | jq -r .Credentials.SessionToken)
        - apply
