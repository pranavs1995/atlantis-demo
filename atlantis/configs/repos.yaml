repos:
  - id: /.*/
    workflows:
      dev:
        plan:
          steps:
            - run: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::DEV_ACCOUNT_ID:role/AtlantisRole --role-session-name AtlantisSession)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
                terraform init
                terraform plan
      stage:
        plan:
          steps:
            - run: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::STAGE_ACCOUNT_ID:role/AtlantisRole --role-session-name AtlantisSession)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
                terraform init
                terraform plan
      prod:
        plan:
          steps:
            - run: |
                temp_role=$(aws sts assume-role --role-arn arn:aws:iam::PROD_ACCOUNT_ID:role/AtlantisRole --role-session-name AtlantisSession)
                export AWS_ACCESS_KEY_ID=$(echo $temp_role | jq -r .Credentials.AccessKeyId)
                export AWS_SECRET_ACCESS_KEY=$(echo $temp_role | jq -r .Credentials.SecretAccessKey)
                export AWS_SESSION_TOKEN=$(echo $temp_role | jq -r .Credentials.SessionToken)
                terraform init
                terraform plan
